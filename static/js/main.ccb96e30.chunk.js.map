{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","hoc/Aux/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/Buildcontrols.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","open","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","Backdrop","show","clicked","sideDrawer","attachedClasses","SideDrawer","Close","Open","Fragment","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","Aux","this","content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchasable","OrderButton","ordered","Modal","UNSAFE_componentWillUpdate","shouldComponentUpdate","nextProps","nextState","console","log","modalClosed","style","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCanceled","purchaseContinue","instance","axios","create","baseURL","spinner","loader","withErrorHandler","WrappedComponent","error","UNSAFE_componentWillMount","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","err","errorConfirmedHandler","componentWillUnmount","eject","message","BurgerBuilder","componentDidMount","onInitIngredients","updatePurchaseState","ings","acc","purchaseHandler","purchasing","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","history","push","disabledInfo","Spinner","onIngredientAdded","onIngredientRemoved","totalPrice","orderSummary","connect","burgerBuilder","dispatch","name","ingredientName","get","then","data","catch","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","Input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","ContactData","orderForm","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","onOrderBurger","checkValidity","rules","isValid","trim","inputChangedHandler","id","updatedOrderForm","updatedFormElement","target","inputIdentifier","formElementsArray","config","form","action","onSubmit","loading","orderData","post","orderId","purchaseBurgerSuccess","actions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","purchased","summary","purchasedRedirect","path","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","fetchedOrders","App","Boolean","window","location","hostname","updateObject","oldObj","updatedProperties","INGREDIENT_PRICES","salad","cheese","meat","bacon","initialState","addIngredient","updatedIngredient","updatedState","removeIngredient","setIngredients","fetchIngredientsFailed","reducer","purchaseInit","purchaseBurgerStart","newOrder","propertyId","purchaseBurgerFail","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ccb96e30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Layout_content__1QeJi\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__fTuX5\",\"load4\":\"Spinner_load4__dJ24G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\",\"Checkoutsummary\":\"CheckoutSummary_Checkoutsummary__rXGIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","const aux = props => props.children;\n\nexport default aux;\n","import React from \"react\";\nimport burgerLogo from \"../../assets/images/burger-logo.png\"\nimport classes from \"./Logo.module.css\"\n\nconst logo = props => (\n<div className={classes.Logo} >\n    <img src={burgerLogo} alt=\"MyBurger\" />\n</div>\n)\n\nexport default logo","import React from \"react\";\nimport classes from \"./NavigationItem.module.css\"\nimport {NavLink} from 'react-router-dom'\n\nconst navigationItem = props => (\n  <li className={classes.NavigationItem}>\n    <NavLink to={props.link} exact activeClassName={classes.active}>{props.children}</NavLink>\n  </li>\n);\n\nexport default navigationItem;\n","import React from \"react\";\nimport classes from \"./NavigationItems.module.css\";\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\n\nconst navigationItems = () => (\n  <ul className={classes.NavigationItems}>\n    <NavigationItem link=\"/\">Burger Builder </NavigationItem>\n    <NavigationItem link=\"/orders\">Orders</NavigationItem>\n  </ul>\n);\n\nexport default navigationItems;\n","import React from \"react\";\nimport classes from \"./DrawerToggle.module.css\";\n\nconst drawerToggle = props => {\n  return (\n    <div className={classes.DrawerToggle} onClick={props.open}>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default drawerToggle;\n","import React from \"react\";\nimport classes from \"./Toolbar.module.css\"\nimport Logo from \"../../Logo/Logo\"\nimport NavigationItems from \"../NavigationItems/NavigationItems\"\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\"\n\nconst toolbar = props => (\n  <header className={classes.Toolbar}>\n    <DrawerToggle open={props.drawerToggleClicked}/>\n    <div className={classes.Logo}><Logo /></div>\n    \n    <nav className={classes.DesktopOnly}><NavigationItems/></nav>\n  </header>\n);\n\nexport default toolbar;\n","import React from \"react\";\nimport classes from \"./Backdrop.module.css\";\n\nconst Backdrop = props => {\n  return props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null;\n};\n\nexport default Backdrop;\n","import React from \"react\";\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport classes from \"./SideDrawer.module.css\";\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\n\nconst sideDrawer = props => {\n    let attachedClasses =[classes.SideDrawer, classes.Close];\n    if (props.open){\n        attachedClasses = [classes.SideDrawer, classes.Open]\n    }\n  return (\n    <React.Fragment>\n    <Backdrop show={props.open} clicked={props.closed}/>\n      <div className={attachedClasses.join(' ')}>\n        <div className={classes.Logo}>\n          <Logo />\n        </div>\n        <nav>\n          <NavigationItems />\n        </nav>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default sideDrawer;\n","import React, { Component } from \"react\";\nimport Aux from \"../Aux/Aux\";\nimport classes from \"./Layout.module.css\";\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\n\nclass Layout extends Component {\n  state = {\n    showSideDrawer: false\n  };\n\n  sideDrawerClosedHandler = () => {\n    this.setState({ showSideDrawer: false });\n  };\n  sideDrawerToggleHandler = () => {\n    this.setState(prevState => {\n      return { showSideDrawer: !prevState.showSideDrawer };\n    });\n  };\n\n  render() {\n    return (\n      <Aux>\n        <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler}>\n          Toolbar, SideDrawer, Backdrop\n        </Toolbar>\n        <SideDrawer\n          open={this.state.showSideDrawer}\n          closed={this.sideDrawerClosedHandler}\n        />\n        <main className={classes.content}>{this.props.children}</main>\n      </Aux>\n    );\n  }\n}\n\nexport default Layout;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport classes from \"./BurgerIngredient.module.css\";\n\nclass BurgerIngredient extends Component {\n  render() {\n    let ingredient = null;\n    switch (this.props.type) {\n      case \"bread-bottom\":\n        ingredient = <div className={classes.BreadBottom}></div>;\n        break;\n      case \"bread-top\":\n        ingredient = (\n          <div className={classes.BreadTop}>\n            <div className={classes.Seeds1}></div>\n            <div className={classes.Seeds2}></div>\n          </div>\n        );\n        break;\n      case \"meat\":\n        ingredient = <div className={classes.Meat}></div>;\n        break;\n      case \"cheese\":\n        ingredient = <div className={classes.Cheese}></div>;\n        break;\n      case \"salad\":\n        ingredient = <div className={classes.Salad}></div>;\n        break;\n      case \"bacon\":\n        ingredient = <div className={classes.Bacon}></div>;\n        break;\n      default:\n        ingredient = null;\n    }\n\n    return ingredient;\n  }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;\n","import React from \"react\";\nimport classes from \"./Burger.module.css\";\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\n\nconst burger = props => {\n  let transformedIngredients = Object.keys(props.ingredients).map(igKey => {\n    return [...Array(props.ingredients[igKey])].map((_, i) => {\n      return <BurgerIngredient key={igKey + i} type={igKey} />;\n    });\n  }).reduce((arr, el)=>{return arr.concat(el)},[]);\n\n  if(transformedIngredients.length === 0){\n      transformedIngredients = <p>Please start adding ingredients</p>\n  }\n\n\n  return (\n    <div className={classes.Burger}>\n      <BurgerIngredient type=\"bread-top\" />\n      {transformedIngredients}\n      <BurgerIngredient type=\"bread-bottom\" />\n    </div>\n  );\n};\n\nexport default burger;\n","import React from \"react\";\nimport classes from \"./BuildControl.module.css\";\n\nconst buildControl = props => {\n  return (\n    <div className={classes.BuildControl}>\n      <div className={classes.Label}>{props.label}</div>\n      <button\n        className={classes.Less}\n        onClick={props.removed}\n        disabled={props.disabled}\n      >\n        Less\n      </button>\n      <button className={classes.More} onClick={props.added}>\n        More\n      </button>\n    </div>\n  );\n};\n\nexport default buildControl;\n","import React from \"react\";\nimport classes from \"./BuildControls.module.css\";\nimport BuildControl from \"./BuildControl/BuildControl\";\n\nconst controls = [\n  { label: \"Salad\", type: \"salad\" },\n  { label: \"Bacon\", type: \"bacon\" },\n  { label: \"Meat\", type: \"meat\" },\n  { label: \"Cheese\", type: \"cheese\" }\n];\n\nconst buildControls = props => {\n  return (\n    <div className={classes.BuildControls}>\n      <p>\n        Current Price: <strong>{props.price.toFixed(2)}</strong>\n      </p>\n      {controls.map(ctrl => (\n        <BuildControl\n          key={ctrl.label}\n          label={ctrl.label}\n          added={() => props.ingredientAdded(ctrl.type)}\n          removed={() => props.ingredientRemoved(ctrl.type)}\n          disabled={props.disabled[ctrl.type]}\n        />\n      ))}\n      <button\n        disabled={!props.purchasable}\n        className={classes.OrderButton}\n        onClick={props.ordered}\n      >\n        ORDER NOW\n      </button>\n    </div>\n  );\n};\n\nexport default buildControls;\n","import React, { Component } from \"react\";\nimport classes from \"./Modal.module.css\";\nimport Backdrop from \"../Backdrop/Backdrop\";\n\nclass Modal extends Component {\n  UNSAFE_componentWillUpdate = () => {\n   /*  console.log(\"Modal will update\"); */\n  };\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n  };\n\n  render() {\n    console.log(\"CHILDREN\", this.props.children);\n    return (\n      <React.Fragment>\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n        <div\n          className={classes.Modal}\n          style={{\n            transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\n            opacity: this.props.show ? 1 : 0\n          }}\n        >\n          {this.props.children}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\nimport classes from \"./Button.module.css\";\n\nconst button = props => (\n  <button\n    className={[classes.Button, classes[props.btnType]].join(\" \")}\n    onClick={props.clicked} disabled={props.disabled}\n  >\n    {props.children}\n  </button>\n);\n\nexport default button;\n","import React, { Component } from \"react\";\n\nimport Button from \"../../UI/Button/Button\";\n\nclass OrderSummary extends Component {\n\n  UNSAFE_componentWillUpdate=()=>{\nconsole.log(\"ordersummarwillupdate\");\n  }\n\n  render() {\n    const ingredientSummary = Object.keys(this.props.ingredients).map(igKey => {\n      return (\n        <li key={igKey} style={{ textTransform: \"capitalize\" }}>\n          <span>{igKey}</span>: {this.props.ingredients[igKey]}\n        </li>\n      );\n    });\n\n    return (\n      <React.Fragment>\n        <h3>Your Order</h3>\n        <p>A delicious burger with the following ingredients:</p>\n        <ul>{ingredientSummary}</ul>\n        <p>\n          <strong>Total Price: {this.props.price.toFixed(2)}</strong>\n        </p>\n        <p>Continue to Checkout?</p>\n        <Button btnType=\"Danger\" clicked={this.props.purchaseCanceled}>\n          CANCEL\n        </Button>\n        <Button btnType=\"Success\" clicked={this.props.purchaseContinue}>\n          CONTINUE\n        </Button>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default OrderSummary;\n","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-b5427.firebaseio.com/'\n});\n\n\n export default instance","import React from 'react'\nimport classes from './Spinner.module.css'\n\nconst spinner = () => {\n    return (\n        <div className={classes.loader}>Loading...</div>\n\n    )\n}\n\nexport default spinner","import React, { Component } from \"react\";\nimport Modal from \"../../components/UI/Modal/Modal\";\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return class extends Component {\n    state = {\n      error: null\n    };\n    UNSAFE_componentWillMount = () => {\n      this.reqInterceptor = axios.interceptors.request.use(req => {\n        this.setState({ error: null });\n        return req;\n      });\n      this.resInterceptor = axios.interceptors.response.use(\n        res => res,\n        err => {\n          this.setState({ error: err });\n        }\n      );\n    };\n\n    errorConfirmedHandler = () => {\n      this.setState({\n        error: null\n      });\n    };\n\n    componentWillUnmount = () => {\n      axios.interceptors.request.eject(this.reqInterceptor);\n      axios.interceptors.response.eject(this.resInterceptor);\n    };\n\n    render() {\n      console.log(\"thisprops\", this.props);\n      return (\n        <React.Fragment>\n          <Modal\n            show={this.state.error}\n            modalClosed={this.errorConfirmedHandler}\n          >\n            {this.state.error && this.state.error.message}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </React.Fragment>\n      );\n    }\n  };\n};\n\nexport default withErrorHandler;\n","import React, { Component } from \"react\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/Buildcontrols\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport axios from \"../../axios-orders\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  /*     constructor(props){\n        super(props);\n        this.state = {}\n    } */\n\n  state = {\n    /*   ingredients: null, */\n    /*     totalPrice: 4, */\n    /*     purchasable: false, */\n    /*     loading: false,\n    error: false */\n  };\n\n  componentDidMount = () => {\n    this.props.onInitIngredients();\n    /*     axios\n      .get(\"https://react-my-burger-b5427.firebaseio.com/ingredients.json\")\n      .then(res => {\n        this.setState({\n          ingredients: res.data\n        });\n      })\n      .catch(err => {\n        this.setState({ error: true });\n      }); */\n  };\n\n  updatePurchaseState = () => {\n    const ingredients = { ...this.props.ings };\n    const sum = Object.keys(ingredients)\n      .map(igKey => {\n        return ingredients[igKey];\n      })\n      .reduce((acc, el) => {\n        return acc + el;\n      }, 0);\n\n    return sum > 0;\n  };\n\n  purchaseHandler = () => {\n    this.setState({\n      purchasing: true\n    });\n  };\n\n  purchaseCancelHandler = () => {\n    this.setState({\n      purchasing: false\n    });\n  };\n\n  purchaseContinueHandler = () => {\n    // const queryParams = [];\n    // for (let i in this.props.ings) {\n    //   queryParams.push(\n    //     encodeURIComponent(i) + \"=\" + encodeURIComponent(this.props.ings[i])\n    //   );\n    // }\n    // queryParams.push(\"price=\" + this.props.totalPrice);\n    // const queryString = queryParams.join(\"&\");\n\n    // this.props.history.push({\n    //   pathname: \"/checkout\",\n    //   search: \"?\" + queryString\n    // });\n    this.props.onInitPurchase()\n    this.props.history.push(\"/checkout\");\n  };\n\n  render() {\n    const disabledInfo = {\n      ...this.props.ings\n    };\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let burger = this.props.error ? (\n      <p>Ingredients can't be loaded</p>\n    ) : (\n      <Spinner />\n    );\n\n    if (this.props.ings) {\n      burger = (\n        <React.Fragment>\n          <Burger ingredients={this.props.ings} />\n          <BuildControls\n            ingredientAdded={this.props.onIngredientAdded}\n            ingredientRemoved={this.props.onIngredientRemoved}\n            disabled={disabledInfo}\n            price={this.props.totalPrice}\n            purchasable={this.updatePurchaseState()}\n            ordered={this.purchaseHandler}\n          />\n        </React.Fragment>\n      );\n    }\n\n    let orderSummary = null;\n    if (this.props.ings) {\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.props.ings}\n          purchaseCanceled={this.purchaseCancelHandler}\n          purchaseContinue={this.purchaseContinueHandler}\n          price={this.props.totalPrice}\n        />\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancelHandler}\n        >\n          {/*        {this.state.loading ? <Spinner /> : orderSummary} */}\n          {orderSummary}\n        </Modal>\n        {burger}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    totalPrice: state.burgerBuilder.totalPrice,\n    error: state.burgerBuilder.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: name =>\n      dispatch(actions.addIngredient(name)),\n    onIngredientRemoved: name =>\n      dispatch(actions.removeIngredient(name)),\n    onInitIngredients: () => dispatch(actions.initIngredients()),\n    onInitPurchase: () => dispatch(actions.purchaseInit())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(BurgerBuilder, axios));\n","import * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios-orders\";\n\nexport const addIngredient = ingredientName => {\n  return {\n    type: actionTypes.ADD_INGREDIENT,\n    ingredientName\n  };\n};\nexport const removeIngredient = ingredientName => {\n  return {\n    type: actionTypes.REMOVE_INGREDIENT,\n    ingredientName\n  };\n};\n\n/* export const initIngredients = () => {\n  return dispatch => {};\n}; */\n\nexport const initIngredients = () => dispatch => {\n  axios\n    .get(\"https://react-my-burger-b5427.firebaseio.com/ingredients.json\")\n    .then(res => {\n/*       console.log(\"axiosingredients\", res.data); */\n      dispatch({\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: res.data\n      });\n    })\n    .catch(err =>\n      dispatch({\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n      })\n    );\n};\n","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\";\n\n\n\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_FAIL\";\nexport const PURCHASE_INIT = 'PURCHASE_INIT'\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START'\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS'\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL'","import * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios-orders\";\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\n\nexport const purchaseBurgerFail = error => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error: error\n  };\n};\n\nexport const purchaseBurgerStart = () => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_START\n  };\n};\n\nexport const purchaseBurger = orderData => dispatch => {\n  dispatch(purchaseBurgerStart());\n  axios\n    .post(\"/orders.json\", orderData)\n    .then(res => {\n      console.log(\"res.data success\", res.data);\n      dispatch(purchaseBurgerSuccess(res.data.name, orderData));\n    })\n    .catch(err => {\n      console.log(err);\n      dispatch(purchaseBurgerFail(err));\n    });\n};\n\nexport const purchaseInit = () => {\n  console.log(\"purchase init\");\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n};\n\nexport const fetchOrderSuccess = orders => {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders: orders\n  };\n};\n\nexport const fetchOrdersFail = error => {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL,\n    error: error\n  };\n};\n\nexport const fetchOrdersStart = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_START\n  };\n};\n\nexport const fetchOrders = () => {\n  return dispatch => {\n    dispatch(fetchOrdersStart())\n    axios\n      .get(\"/orders.json\")\n      .then(res => {\n        let fetchedOrders = [];\n        for (let key in res.data) {\n          fetchedOrders.push({ ...res.data[key], id: key });\n        }\ndispatch(fetchOrderSuccess(fetchedOrders))\n      })\n      .catch(err => dispatch(fetchOrdersFail(err)));\n  };\n};\n","import React from 'react';\nimport Burger from '../../Burger/Burger'\nimport Button from '../../UI/Button/Button'\n\nimport classes from './CheckoutSummary.module.css'\n\nconst checkoutSummary = (props) => {\nreturn(\n    <div className={classes.CheckoutSummary}>\n        <h1>We hope it tastes well!</h1>\n        <div style={{width: '100%', margin: \"auto\"}}>\n            <Burger ingredients={props.ingredients} />\n        </div>\n        <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>Cancel</Button>\n        <Button btnType=\"Success\" clicked={props.checkoutContinued}>Continue</Button>\n    </div>\n)\n}\n\nexport default checkoutSummary;","import React from \"react\";\nimport classes from \"./Input.module.css\";\n\nconst Input = props => {\n  let inputElement = null;\nconst inputClasses = [classes.InputElement];\n\nif(props.invalid && props.shouldValidate && props.touched){\n    inputClasses.push(classes.Invalid)\n}\n\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <select\n          className={inputClasses.join(' ')}\n          value={props.value}\n          onChange={props.changed}\n        >\n          {props.elementConfig.options.map(option => {\n            return (\n              <option key={option.value} value={option.value}>\n                {option.displayValue}\n              </option>\n            );\n          })}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n  }\n\n  return (\n    <div className={classes.Input}>\n      <label className={classes.Label}>{props.label}</label>\n      {inputElement}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport classes from \"./ContactData.module.css\";\nimport axios from \"../../../axios-orders\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\nimport * as actions from \"../../../store/actions/index\";\n\nimport { connect } from \"react-redux\";\n\nclass ContactData extends Component {\n  state = {\n    orderForm: {\n      name: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Your name\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      street: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Street\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      zipCode: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"ZIPC\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 5\n        },\n        valid: false,\n        touched: false\n      },\n      country: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Country\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      email: {\n        elementType: \"email\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"E-Mail\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      deliveryMethod: {\n        valid: true,\n        validation: {},\n        value: \"fastest\",\n        elementType: \"select\",\n        elementConfig: {\n          options: [\n            {\n              value: \"fastest\",\n              displayValue: \"Fastest\"\n            },\n            {\n              value: \"cheapest\",\n              displayValue: \"Cheapest\"\n            }\n          ]\n        }\n      }\n    },\n    formIsValid: false,\n/*     loading: false */\n  };\n\n  orderHandler = event => {\n    event.preventDefault();\n    console.log(this.props.ings);\n    const formData = {};\n    for (let formElementIdentifier in this.state.orderForm) {\n      formData[formElementIdentifier] = this.state.orderForm[\n        formElementIdentifier\n      ].value;\n    }\n\n    /* this.setState({\n      loading: true\n    }); */\n    const order = {\n      ingredients: this.props.ings,\n      price: this.props.price,\n      order: formData\n    };\n    /* alert(\"You continue!\"); */\n/*     axios\n      .post(\"/orders.json\", order)\n      .then(res => {\n        console.log(res);\n        this.setState({\n          loading: false\n        });\n        this.props.history.push(\"/\");\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          loading: false\n        });\n      }); */\n\n      this.props.onOrderBurger(order)\n  };\n\n  checkValidity = (value, rules) => {\n    let isValid = true;\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n    if (rules.maxLength) {\n      isValid = value.length <= rules.minLength && isValid;\n    }\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n\n    return isValid;\n  };\n\n  inputChangedHandler = (event, id) => {\n    const updatedOrderForm = {\n      ...this.state.orderForm\n    };\n\n    const updatedFormElement = updatedOrderForm[id];\n    console.log(\"updatedFormElement\", updatedFormElement);\n    updatedFormElement.value = event.target.value;\n    updatedFormElement.touched = true;\n    updatedFormElement.valid = this.checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation\n    );\n    updatedOrderForm[id] = updatedFormElement;\n\n    let formIsValid = true;\n    for (let inputIdentifier in updatedOrderForm) {\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n    }\n\n    this.setState({\n      orderForm: updatedOrderForm,\n      formIsValid: formIsValid\n    });\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = (\n      <form action=\"\" onSubmit={this.orderHandler}>\n        {formElementsArray.map(el => (\n          <Input\n            key={el.id}\n            elementType={el.config.elementType}\n            elementConfig={el.config.elementConfig}\n            value={el.config.value}\n            changed={event => this.inputChangedHandler(event, el.id)}\n            invalid={!el.config.valid}\n            touched={el.config.touched}\n            shouldValidate={el.config.validation}\n          />\n        ))}\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\n          ORDER\n        </Button>\n      </form>\n    );\n    if (this.props.loading) {\n      form = <Spinner />;\n    }\n    return (\n      <div className={classes.ContactData}>\n        <h4>Enter your Contact Data</h4>\n        {form}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    loading: state.order.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onOrderBurger: orderData => dispatch(actions.purchaseBurger(orderData))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));\n","import React, { Component } from \"react\";\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport ContactData from \"./ContactData/ContactData\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\n\nclass Checkout extends Component {\n  // state = {\n  //   ingredients: {\n  //     salad: 1,\n  //     meat: 1,\n  //     cheese: 1,\n  //     bacon: 1\n  //   },\n  //   price: 0\n  // };\n\n  // componentDidMount = () => {\n  //   const query = new URLSearchParams(this.props.location.search);\n  //   const ingredients = {};\n  //   let price = 0;\n  //   for (let param of query.entries()) {\n  //     console.log(param);\n  //     if (param[0] === \"price\") {\n  //       price = param[1];\n  //     } else {\n  //       ingredients[param[0]] = Number(param[1]);\n  //     }\n  //   }\n\n  //   console.log(\"QUERY:\", query);\n  //   console.log(\"QueryEntries:\", query.entries());\n\n  //   this.setState({\n  //     ingredients,\n  //     totalPrice: price\n  //   });\n  // };\n\n  checkoutCancelledHandler = () => {\n    this.props.history.goBack();\n  };\n\n  checkoutContinuedHandler = () => {\n    this.props.history.replace(\"/checkout/contactdata\");\n  };\n\n  render() {\n    console.log(\"purchased\", this.props.purchased);\n    let summary = <Redirect to=\"/\" />;\n\n    if (this.props.ings) {\n     let purchasedRedirect = this.props.purchased ? (\n        <Redirect to=\"/\" />\n      ) : null;\n      summary = (\n        <>\n          {purchasedRedirect}\n          <CheckoutSummary\n            checkoutCancelled={this.checkoutCancelledHandler}\n            checkoutContinued={this.checkoutContinuedHandler}\n            ingredients={this.props.ings}\n          />\n          <Route\n            path={this.props.match.path + \"/contactdata\"}\n            component={ContactData}\n          />\n        </>\n      );\n    }\n    return <div>{summary}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    purchased: state.order.purchased\n  };\n};\n\n/* const mapDispatchToProps = dispatch => {\n  return {\n    onInitPurchase: () => dispatch(actions.purchaseInit())\n  };\n};\n */\nexport default connect(mapStateToProps, /* mapDispatchToProps */)(Checkout);\n","import React from \"react\";\nimport classes from \"./Order.module.css\";\n\nconst order = props => {\n  const ingredients = [];\n  for (let ingredientName in props.ingredients) {\n    ingredients.push({\n      name: ingredientName,\n      amount: props.ingredients[ingredientName]\n    });\n  }\n\n  const ingredientOutput = ingredients.map(ig => {\n    return (\n      <span\n        style={{\n          textTransform: \"capitalize\",\n          display: \"inline-lock\",\n          margin: \"0 8px\",\n          border: \"1px solid #ccc\",\n          padding: \"5px\"\n        }}\n        key={ig.name}\n      >\n        {ig.name} ({ig.amount}){\" \"}\n      </span>\n    );\n  });\n\n  return (\n    <div className={classes.Order}>\n      <p>{ingredientOutput}</p>\n      <p>\n        Price: <strong>{Number.parseFloat(props.price).toFixed(2)}</strong>\n      </p>\n    </div>\n  );\n};\n\nexport default order;\n","import React, { Component } from \"react\";\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n\nclass Orders extends Component {\n  /*   state = {\n    orders: [],\n    loading: true\n  }; */\n\n  /*   componentDidMount() {\n    axios\n      .get(\"/orders.json\")\n      .then(res => {\n        let fetchedOrders = [];\n        for (let key in res.data) {\n          fetchedOrders.push({ ...res.data[key], id: key });\n        }\n        this.setState({ loading: false, orders: fetchedOrders });\n      })\n      .catch(err => this.setState({ loading: false }));\n  } */\n\n  componentDidMount = () => {\n    this.props.onFetchOrders();\n  };\n\n  render() {\n    let orders = <Spinner />;\n    if (!this.props.loading) {\n      orders = this.props.orders.map(order => {\n        return (\n          <Order\n            key={order.id}\n            ingredients={order.ingredients}\n            price={order.price}\n          />\n        );\n      });\n    }\n    return <div>{orders}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: () => dispatch(actions.fetchOrders())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(Orders, axios));\n","import React, { Component } from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport Checkout from \"./containers/Checkout/Checkout\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Orders from \"./containers/Orders/Orders\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          {/*       <BurgerBuilder />\n      <Checkout /> */}\n          <Switch>\n            <Route path=\"/\" exact component={BurgerBuilder} />\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObj, updatedProperties) => {\n  return {\n    ...oldObj,\n    ...updatedProperties\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false\n};\n\nconst addIngredient = (state, action) => {\n  const updatedIngredient = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n  };\n  return updateObject(state, updatedState);\n};\n\nconst removeIngredient = (state, action) => {\n  const updatedIngredient = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n  };\n  return updateObject(state, updatedState);\n};\n\nconst setIngredients = (state, action) => {\n  /*       console.log(action) */\n  return updateObject(state, {\n    ingredients: action.ingredients,\n    totalPrice: 4,\n    error: false\n  });\n};\n\nconst fetchIngredientsFailed = (state, action) => {\n  return updateObject(state, { error: true });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return addIngredient(state, action);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return removeIngredient(state, action);\n\n    case actionTypes.SET_INGREDIENTS:\n      return setIngredients(state, action);\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return fetchIngredientsFailed(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst purchaseInit = (state, action) => {\n  return updateObject(state, { loading: false });\n};\nconst purchaseBurgerStart = (state, action) => {\n  return updateObject(state, { loading: true });\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n  const newOrder = updateObject(action.orderData, {\n    propertyId: action.orderId\n  });\n  return updateObject({\n    loading: false,\n    purchased: true,\n    orders: state.orders.concat(newOrder)\n  });\n};\n\nconst purchaseBurgerFail = (state, action) => {\n  return updateObject(state, { loading: false });\n};\n\nconst fetchOrdersStart = (state, action) => {\n  return updateObject(state, { loading: true });\n};\n\nconst fetchOrdersSuccess = (state, action) => {\n  return updateObject(state, {\n    orders: action.orders,\n    loading: false\n  });\n};\n\nconst fetchOrdersFail = (state, action) => {\n  return updateObject(state, { loading: false });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return purchaseInit(state, action);\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return purchaseBurgerStart(state, action);\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      return purchaseBurgerSuccess(state, action);\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return purchaseBurgerFail(state, action);\n\n    case actionTypes.FETCH_ORDERS_START:\n      return fetchOrdersStart(state, action);\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return fetchOrdersSuccess(state, action);\n\n    case actionTypes.FETCH_ORDERS_FAIL:\n      return fetchOrdersFail(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order'\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}