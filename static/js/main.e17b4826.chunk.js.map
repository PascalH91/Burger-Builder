{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","hoc/Aux/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/Buildcontrols.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","open","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","Backdrop","show","clicked","sideDrawer","attachedClasses","SideDrawer","Close","Open","Fragment","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","Aux","this","content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchasable","OrderButton","ordered","Modal","UNSAFE_componentWillUpdate","shouldComponentUpdate","nextProps","nextState","modalClosed","style","transform","opacity","button","Button","btnType","OrderSummary","console","log","ingredientSummary","textTransform","purchaseCanceled","purchaseContinue","instance","axios","create","baseURL","spinner","loader","withErrorHandler","WrappedComponent","error","UNSAFE_componentWillMount","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","err","errorConfirmedHandler","componentWillUnmount","eject","message","INGREDIENT_PRICES","salad","cheese","meat","bacon","totalPrice","loading","componentDidMount","get","then","data","catch","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","updatePurchaseState","removeIngredientHandler","oldCount","priceDeduction","sum","acc","purchaseHandler","purchasing","purchaseCancelHandler","purchaseContinueHandler","queryParams","push","encodeURIComponent","queryString","history","pathname","search","disabledInfo","Spinner","orderSummary","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","Input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","post","checkValidity","rules","isValid","trim","inputChangedHandler","id","updatedOrderForm","updatedFormElement","target","inputIdentifier","formElementsArray","config","form","action","onSubmit","Checkout","query","URLSearchParams","location","entries","param","Number","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","path","match","render","ingredientName","amount","ingredientOutput","ig","display","border","padding","Order","parseFloat","orders","fetchedOrders","App","component","BurgerBuilder","Orders","Boolean","window","hostname","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e17b4826.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Layout_content__1QeJi\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__fTuX5\",\"load4\":\"Spinner_load4__dJ24G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\",\"Checkoutsummary\":\"CheckoutSummary_Checkoutsummary__rXGIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","const aux = props => props.children;\n\nexport default aux;\n","import React from \"react\";\nimport burgerLogo from \"../../assets/images/burger-logo.png\"\nimport classes from \"./Logo.module.css\"\n\nconst logo = props => (\n<div className={classes.Logo} >\n    <img src={burgerLogo} alt=\"MyBurger\" />\n</div>\n)\n\nexport default logo","import React from \"react\";\nimport classes from \"./NavigationItem.module.css\"\nimport {NavLink} from 'react-router-dom'\n\nconst navigationItem = props => (\n  <li className={classes.NavigationItem}>\n    <NavLink to={props.link} exact activeClassName={classes.active}>{props.children}</NavLink>\n  </li>\n);\n\nexport default navigationItem;\n","import React from \"react\";\nimport classes from \"./NavigationItems.module.css\";\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\n\nconst navigationItems = () => (\n  <ul className={classes.NavigationItems}>\n    <NavigationItem link=\"/\">Burger Builder </NavigationItem>\n    <NavigationItem link=\"/orders\">Orders</NavigationItem>\n  </ul>\n);\n\nexport default navigationItems;\n","import React from \"react\";\nimport classes from \"./DrawerToggle.module.css\";\n\nconst drawerToggle = props => {\n  return (\n    <div className={classes.DrawerToggle} onClick={props.open}>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default drawerToggle;\n","import React from \"react\";\nimport classes from \"./Toolbar.module.css\"\nimport Logo from \"../../Logo/Logo\"\nimport NavigationItems from \"../NavigationItems/NavigationItems\"\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\"\n\nconst toolbar = props => (\n  <header className={classes.Toolbar}>\n    <DrawerToggle open={props.drawerToggleClicked}/>\n    <div className={classes.Logo}><Logo /></div>\n    \n    <nav className={classes.DesktopOnly}><NavigationItems/></nav>\n  </header>\n);\n\nexport default toolbar;\n","import React from \"react\";\nimport classes from \"./Backdrop.module.css\";\n\nconst Backdrop = props => {\n  return props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null;\n};\n\nexport default Backdrop;\n","import React from \"react\";\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport classes from \"./SideDrawer.module.css\";\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\n\nconst sideDrawer = props => {\n    let attachedClasses =[classes.SideDrawer, classes.Close];\n    if (props.open){\n        attachedClasses = [classes.SideDrawer, classes.Open]\n    }\n  return (\n    <React.Fragment>\n    <Backdrop show={props.open} clicked={props.closed}/>\n      <div className={attachedClasses.join(' ')}>\n        <div className={classes.Logo}>\n          <Logo />\n        </div>\n        <nav>\n          <NavigationItems />\n        </nav>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default sideDrawer;\n","import React, { Component } from \"react\";\nimport Aux from \"../Aux/Aux\";\nimport classes from \"./Layout.module.css\";\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\n\nclass Layout extends Component {\n  state = {\n    showSideDrawer: false\n  };\n\n  sideDrawerClosedHandler = () => {\n    this.setState({ showSideDrawer: false });\n  };\n  sideDrawerToggleHandler = () => {\n    this.setState(prevState => {\n      return { showSideDrawer: !prevState.showSideDrawer };\n    });\n  };\n\n  render() {\n    return (\n      <Aux>\n        <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler}>\n          Toolbar, SideDrawer, Backdrop\n        </Toolbar>\n        <SideDrawer\n          open={this.state.showSideDrawer}\n          closed={this.sideDrawerClosedHandler}\n        />\n        <main className={classes.content}>{this.props.children}</main>\n      </Aux>\n    );\n  }\n}\n\nexport default Layout;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport classes from \"./BurgerIngredient.module.css\";\n\nclass BurgerIngredient extends Component {\n  render() {\n    let ingredient = null;\n    switch (this.props.type) {\n      case \"bread-bottom\":\n        ingredient = <div className={classes.BreadBottom}></div>;\n        break;\n      case \"bread-top\":\n        ingredient = (\n          <div className={classes.BreadTop}>\n            <div className={classes.Seeds1}></div>\n            <div className={classes.Seeds2}></div>\n          </div>\n        );\n        break;\n      case \"meat\":\n        ingredient = <div className={classes.Meat}></div>;\n        break;\n      case \"cheese\":\n        ingredient = <div className={classes.Cheese}></div>;\n        break;\n      case \"salad\":\n        ingredient = <div className={classes.Salad}></div>;\n        break;\n      case \"bacon\":\n        ingredient = <div className={classes.Bacon}></div>;\n        break;\n      default:\n        ingredient = null;\n    }\n\n    return ingredient;\n  }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;\n","import React from \"react\";\nimport classes from \"./Burger.module.css\";\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\n\nconst burger = props => {\n  let transformedIngredients = Object.keys(props.ingredients).map(igKey => {\n    return [...Array(props.ingredients[igKey])].map((_, i) => {\n      return <BurgerIngredient key={igKey + i} type={igKey} />;\n    });\n  }).reduce((arr, el)=>{return arr.concat(el)},[]);\n\n  if(transformedIngredients.length === 0){\n      transformedIngredients = <p>Please start adding ingredients</p>\n  }\n\n\n  return (\n    <div className={classes.Burger}>\n      <BurgerIngredient type=\"bread-top\" />\n      {transformedIngredients}\n      <BurgerIngredient type=\"bread-bottom\" />\n    </div>\n  );\n};\n\nexport default burger;\n","import React from \"react\";\nimport classes from \"./BuildControl.module.css\";\n\nconst buildControl = props => {\n  return (\n    <div className={classes.BuildControl}>\n      <div className={classes.Label}>{props.label}</div>\n      <button\n        className={classes.Less}\n        onClick={props.removed}\n        disabled={props.disabled}\n      >\n        Less\n      </button>\n      <button className={classes.More} onClick={props.added}>\n        More\n      </button>\n    </div>\n  );\n};\n\nexport default buildControl;\n","import React from \"react\";\nimport classes from \"./BuildControls.module.css\";\nimport BuildControl from \"./BuildControl/BuildControl\";\n\nconst controls = [\n  { label: \"Salad\", type: \"salad\" },\n  { label: \"Bacon\", type: \"bacon\" },\n  { label: \"Meat\", type: \"meat\" },\n  { label: \"Cheese\", type: \"cheese\" }\n];\n\nconst buildControls = props => {\n  return (\n    <div className={classes.BuildControls}>\n      <p>\n        Current Price: <strong>{props.price.toFixed(2)}</strong>\n      </p>\n      {controls.map(ctrl => (\n        <BuildControl\n          key={ctrl.label}\n          label={ctrl.label}\n          added={() => props.ingredientAdded(ctrl.type)}\n          removed={() => props.ingredientRemoved(ctrl.type)}\n          disabled={props.disabled[ctrl.type]}\n        />\n      ))}\n      <button\n        disabled={props.purchasable}\n        className={classes.OrderButton}\n        onClick={props.ordered}\n      >\n        ORDER NOW\n      </button>\n    </div>\n  );\n};\n\nexport default buildControls;\n","import React, { Component } from \"react\";\nimport classes from \"./Modal.module.css\";\nimport Backdrop from \"../Backdrop/Backdrop\";\n\nclass Modal extends Component {\n  UNSAFE_componentWillUpdate = () => {\n   /*  console.log(\"Modal will update\"); */\n  };\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n        <div\n          className={classes.Modal}\n          style={{\n            transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\n            opacity: this.props.show ? 1 : 0\n          }}\n        >\n          {this.props.children}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\nimport classes from \"./Button.module.css\";\n\nconst button = props => (\n  <button\n    className={[classes.Button, classes[props.btnType]].join(\" \")}\n    onClick={props.clicked} disabled={props.disabled}\n  >\n    {props.children}\n  </button>\n);\n\nexport default button;\n","import React, { Component } from \"react\";\n\nimport Button from \"../../UI/Button/Button\";\n\nclass OrderSummary extends Component {\n\n  UNSAFE_componentWillUpdate=()=>{\nconsole.log(\"ordersummarwillupdate\");\n  }\n\n  render() {\n    const ingredientSummary = Object.keys(this.props.ingredients).map(igKey => {\n      return (\n        <li key={igKey} style={{ textTransform: \"capitalize\" }}>\n          <span>{igKey}</span>: {this.props.ingredients[igKey]}\n        </li>\n      );\n    });\n\n    return (\n      <React.Fragment>\n        <h3>Your Order</h3>\n        <p>A delicious burger with the following ingredients:</p>\n        <ul>{ingredientSummary}</ul>\n        <p>\n          <strong>Total Price: {this.props.price.toFixed(2)}</strong>\n        </p>\n        <p>Continue to Checkout?</p>\n        <Button btnType=\"Danger\" clicked={this.props.purchaseCanceled}>\n          CANCEL\n        </Button>\n        <Button btnType=\"Success\" clicked={this.props.purchaseContinue}>\n          CONTINUE\n        </Button>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default OrderSummary;\n","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-b5427.firebaseio.com/'\n});\n\n\n export default instance","import React from 'react'\nimport classes from './Spinner.module.css'\n\nconst spinner = () => {\n    return (\n        <div className={classes.loader}>Loading...</div>\n\n    )\n}\n\nexport default spinner","import React, { Component } from \"react\";\nimport Modal from \"../../components/UI/Modal/Modal\";\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return class extends Component {\n    state = {\n      error: null\n    };\n    UNSAFE_componentWillMount = () => {\n      this.reqInterceptor = axios.interceptors.request.use(req => {\n        this.setState({ error: null });\n        return req;\n      });\n      this.resInterceptor = axios.interceptors.response.use(\n        res => res,\n        err => {\n          this.setState({ error: err });\n        }\n      );\n    };\n\n    errorConfirmedHandler = () => {\n      this.setState({\n        error: null\n      });\n    };\n\n    componentWillUnmount = () => {\n      axios.interceptors.request.eject(this.reqInterceptor);\n      axios.interceptors.response.eject(this.resInterceptor);\n    };\n\n    render() {\n      console.log(\"thisprops\", this.props);\n      return (\n        <React.Fragment>\n          <Modal\n            show={this.state.error}\n            modalClosed={this.errorConfirmedHandler}\n          >\n            {this.state.error && this.state.error.message}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </React.Fragment>\n      );\n    }\n  };\n};\n\nexport default withErrorHandler;\n","import React, { Component } from \"react\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/Buildcontrols\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport axios from \"../../axios-orders\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  /*     constructor(props){\n        super(props);\n        this.state = {}\n    } */\n\n  state = {\n    ingredients: null,\n    totalPrice: 4,\n    purchasable: false,\n    loading: false,\n    error: false\n  };\n\n  componentDidMount = () => {\n    axios\n      .get(\"https://react-my-burger-b5427.firebaseio.com/ingredients.json\")\n      .then(res => {\n        this.setState({\n          ingredients: res.data\n        });\n      })\n      .catch(err => {\n        this.setState({ error: true });\n      });\n  };\n\n  addIngredientHandler = type => {\n    const oldCount = this.state.ingredients[type];\n    const updatedCount = oldCount + 1;\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice + priceAddition;\n    this.setState(\n      { totalPrice: newPrice, ingredients: updatedIngredients },\n      () => this.updatePurchaseState()\n    );\n  };\n\n  removeIngredientHandler = type => {\n    const oldCount = this.state.ingredients[type];\n    if (oldCount <= 0) {\n      return;\n    }\n    const updatedCount = oldCount - 1;\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceDeduction = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice - priceDeduction;\n    this.setState(\n      { totalPrice: newPrice, ingredients: updatedIngredients },\n      () => this.updatePurchaseState()\n    );\n  };\n\n  updatePurchaseState = () => {\n    const ingredients = { ...this.state.ingredients };\n    const sum = Object.keys(ingredients)\n      .map(igKey => {\n        return ingredients[igKey];\n      })\n      .reduce((acc, el) => acc + el, 0);\n\n    this.setState({\n      purchasable: sum > 0\n    });\n  };\n\n  purchaseHandler = () => {\n    this.setState({\n      purchasing: true\n    });\n  };\n\n  purchaseCancelHandler = () => {\n    this.setState({\n      purchasing: false\n    });\n  };\n\n  purchaseContinueHandler = () => {\n    // this.setState({\n    //   loading: true\n    // });\n    // const order = {\n    //   ingredients: this.state.ingredients,\n    //   price: this.state.totalPrice,\n    //   customer: {\n    //     name: \"Pascal Hanke\",\n    //     address: {\n    //       street: \"Teststreet 1\",\n    //       zipCode: \"41351\",\n    //       country: \"Germany\"\n    //     },\n    //     email: \"test@test.com\"\n    //   },\n    //   deliveryMethod: \"fastest\"\n    // };\n    // /* alert(\"You continue!\"); */\n    // axios\n    //   .post(\"/orders.json\", order)\n    //   .then(res => {\n    //     console.log(res);\n    //     this.setState({\n    //       loading: false,\n    //       purchasing: false\n    //     });\n    //   })\n    //   .catch(err => {\n    //     console.log(err);\n    //     this.setState({\n    //       loading: false,\n    //       purchasing: false\n    //     });\n    //   });\nconst queryParams = [];\nfor (let i in this.state.ingredients) {\n  queryParams.push(encodeURIComponent(i)+ '=' + encodeURIComponent(this.state.ingredients[i]));\n}\nqueryParams.push('price=' + this.state.totalPrice);\nconst queryString = queryParams.join('&')\n\n    this.props.history.push({\n      pathname: \"/checkout\",\n      search: '?'+ queryString\n    })\n  };\n\n  render() {\n    const disabledInfo = {\n      ...this.state.ingredients\n    };\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let burger = this.state.error ? (\n      <p>Ingredients can't be loaded</p>\n    ) : (\n      <Spinner />\n    );\n\n    if (this.state.ingredients) {\n      burger = (\n        <React.Fragment>\n          <Burger ingredients={this.state.ingredients} />\n          <BuildControls\n            ingredientAdded={this.addIngredientHandler}\n            ingredientRemoved={this.removeIngredientHandler}\n            disabled={disabledInfo}\n            price={this.state.totalPrice}\n            purchasable={!this.state.purchasable}\n            ordered={this.purchaseHandler}\n          />\n        </React.Fragment>\n      );\n    }\n\n    let orderSummary = null;\n    if (this.state.ingredients) {\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.state.ingredients}\n          purchaseCanceled={this.purchaseCancelHandler}\n          purchaseContinue={this.purchaseContinueHandler}\n          price={this.state.totalPrice}\n        />\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancelHandler}\n        >\n          {this.state.loading ? <Spinner /> : orderSummary}\n        </Modal>\n        {burger}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);\n","import React from 'react';\nimport Burger from '../../Burger/Burger'\nimport Button from '../../UI/Button/Button'\n\nimport classes from './CheckoutSummary.module.css'\n\nconst checkoutSummary = (props) => {\nreturn(\n    <div className={classes.CheckoutSummary}>\n        <h1>We hope it tastes well!</h1>\n        <div style={{width: '100%', margin: \"auto\"}}>\n            <Burger ingredients={props.ingredients} />\n        </div>\n        <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>Cancel</Button>\n        <Button btnType=\"Success\" clicked={props.checkoutContinued}>Continue</Button>\n    </div>\n)\n}\n\nexport default checkoutSummary;","import React from \"react\";\nimport classes from \"./Input.module.css\";\n\nconst Input = props => {\n  let inputElement = null;\nconst inputClasses = [classes.InputElement];\n\nif(props.invalid && props.shouldValidate && props.touched){\n    inputClasses.push(classes.Invalid)\n}\n\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <select\n          className={inputClasses.join(' ')}\n          value={props.value}\n          onChange={props.changed}\n        >\n          {props.elementConfig.options.map(option => {\n            return (\n              <option key={option.value} value={option.value}>\n                {option.displayValue}\n              </option>\n            );\n          })}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n  }\n\n  return (\n    <div className={classes.Input}>\n      <label className={classes.Label}>{props.label}</label>\n      {inputElement}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport classes from \"./ContactData.module.css\";\nimport axios from \"../../../axios-orders\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from \"../../../components/UI/Input/Input\";\n\nclass ContactData extends Component {\n  state = {\n    orderForm: {\n      name: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Your name\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      street: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Street\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      zipCode: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"ZIPC\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 5\n        },\n        valid: false,\n        touched: false\n      },\n      country: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Country\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      email: {\n        elementType: \"email\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"E-Mail\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      deliveryMethod: {\n        valid: true,\n        validation: {},\n        value: \"fastest\",\n        elementType: \"select\",\n        elementConfig: {\n          options: [\n            {\n              value: \"fastest\",\n              displayValue: \"Fastest\"\n            },\n            {\n              value: \"cheapest\",\n              displayValue: \"Cheapest\"\n            }\n          ]\n        }\n      }\n    },\n    formIsValid: false,\n    loading: false\n  };\n\n  orderHandler = event => {\n    event.preventDefault();\n    console.log(this.props.ingredients);\n    const formData = {};\n    for (let formElementIdentifier in this.state.orderForm) {\n      formData[formElementIdentifier] = this.state.orderForm[\n        formElementIdentifier\n      ].value;\n    }\n\n    this.setState({\n      loading: true\n    });\n    const order = {\n      ingredients: this.props.ingredients,\n      price: this.props.price,\n      order: formData\n    };\n    /* alert(\"You continue!\"); */\n    axios\n      .post(\"/orders.json\", order)\n      .then(res => {\n        console.log(res);\n        this.setState({\n          loading: false\n        });\n        this.props.history.push(\"/\");\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          loading: false\n        });\n      });\n  };\n\n  checkValidity = (value, rules) => {\n    let isValid = true;\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n    if (rules.maxLength) {\n      isValid = value.length <= rules.minLength && isValid;\n    }\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n\n    return isValid;\n  };\n\n  inputChangedHandler = (event, id) => {\n    const updatedOrderForm = {\n      ...this.state.orderForm\n    };\n\n    const updatedFormElement = updatedOrderForm[id];\n    console.log(\"updatedFormElement\", updatedFormElement);\n    updatedFormElement.value = event.target.value;\n    updatedFormElement.touched = true;\n    updatedFormElement.valid = this.checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation\n    );\n    updatedOrderForm[id] = updatedFormElement;\n\n    let formIsValid = true;\n    for (let inputIdentifier in updatedOrderForm) {\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n    }\n\n    this.setState({\n      orderForm: updatedOrderForm,\n      formIsValid: formIsValid\n    });\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = (\n      <form action=\"\" onSubmit={this.orderHandler}>\n        {formElementsArray.map(el => (\n          <Input\n            key={el.id}\n            elementType={el.config.elementType}\n            elementConfig={el.config.elementConfig}\n            value={el.config.value}\n            changed={event => this.inputChangedHandler(event, el.id)}\n            invalid={!el.config.valid}\n            touched={el.config.touched}\n            shouldValidate={el.config.validation}\n          />\n        ))}\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\n          ORDER\n        </Button>\n      </form>\n    );\n    if (this.state.loading) {\n      form = <Spinner />;\n    }\n    return (\n      <div className={classes.ContactData}>\n        <h4>Enter your Contact Data</h4>\n        {form}\n      </div>\n    );\n  }\n}\n\nexport default ContactData;\n","import React, { Component } from \"react\";\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\nimport { Route } from \"react-router-dom\";\nimport ContactData from \"./ContactData/ContactData\";\n\nclass Checkout extends Component {\n  state = {\n    ingredients: {\n      salad: 1,\n      meat: 1,\n      cheese: 1,\n      bacon: 1\n    },\n    price: 0\n  };\n\n  componentDidMount = () => {\n    const query = new URLSearchParams(this.props.location.search);\n    const ingredients = {};\n    let price = 0;\n    for (let param of query.entries()) {\n      console.log(param);\n      if (param[0] === \"price\") {\n        price = param[1];\n      } else {\n        ingredients[param[0]] = Number(param[1]);\n      }\n    }\n\n    console.log(\"QUERY:\", query);\n    console.log(\"QueryEntries:\", query.entries());\n\n    this.setState({\n      ingredients,\n      totalPrice: price\n    });\n  };\n\n  checkoutCancelledHandler = () => {\n    this.props.history.goBack();\n  };\n\n  checkoutContinuedHandler = () => {\n    this.props.history.replace(\"/checkout/contactdata\");\n  };\n\n  render() {\n    return (\n      <div>\n        <CheckoutSummary\n          checkoutCancelled={this.checkoutCancelledHandler}\n          checkoutContinued={this.checkoutContinuedHandler}\n          ingredients={this.state.ingredients}\n        />\n        <Route\n          path={this.props.match.path + \"/contactdata\"}\n          render={props => (\n            <ContactData\n              price={this.state.totalPrice}\n              ingredients={this.state.ingredients}\n              {...props}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Checkout;\n","import React from \"react\";\nimport classes from \"./Order.module.css\";\n\nconst order = props => {\n  const ingredients = [];\n  for (let ingredientName in props.ingredients) {\n    ingredients.push({\n      name: ingredientName,\n      amount: props.ingredients[ingredientName]\n    });\n  }\n\n  const ingredientOutput = ingredients.map(ig => {\n    return (\n      <span\n        style={{\n          textTransform: \"capitalize\",\n          display: \"inline-lock\",\n          margin: \"0 8px\",\n          border: \"1px solid #ccc\",\n          padding: \"5px\"\n        }}\n        key={ig.name}\n      >\n        {ig.name} ({ig.amount}){\" \"}\n      </span>\n    );\n  });\n\n  return (\n    <div className={classes.Order}>\n      <p>{ingredientOutput}</p>\n      <p>\n        Price: <strong>{Number.parseFloat(props.price).toFixed(2)}</strong>\n      </p>\n    </div>\n  );\n};\n\nexport default order;\n","import React, { Component } from \"react\";\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n\nclass Orders extends Component {\n  state = {\n    orders: [],\n    loading: true\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"/orders.json\")\n      .then(res => {\n        let fetchedOrders = [];\n        for (let key in res.data) {\n          fetchedOrders.push({ ...res.data[key], id: key });\n        }\n        this.setState({ loading: false, orders: fetchedOrders });\n      })\n      .catch(err => this.setState({ loading: false }));\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.orders.map(order=>{\n            return <Order key={order.id} ingredients={order.ingredients} price={order.price}/>\n        })}\n      </div>\n    );\n  }\n}\n\nexport default withErrorHandler(Orders, axios);\n","import React, { Component } from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport Checkout from \"./containers/Checkout/Checkout\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Orders from \"./containers/Orders/Orders\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          {/*       <BurgerBuilder />\n      <Checkout /> */}\n          <Switch>\n            <Route path=\"/\" exact component={BurgerBuilder} />\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst app = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}